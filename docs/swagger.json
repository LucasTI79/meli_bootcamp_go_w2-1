{
    "swagger": "2.0",
    "info": {
        "description": "This API Handle MELI Products.",
        "title": "MELI Bootcamp API",
        "termsOfService": "https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones",
        "contact": {
            "name": "API Support",
            "url": "https://developers.mercadolibre.com.ar/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/warehouses": {
            "get": {
                "description": "Get all warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get all warehouses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Warehouse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get the warehouses",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "This endpoint allows updating the information of an existing warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update a warehouse",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse updated successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update warehouse",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Create a warehouse",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Warehouse data to store",
                        "name": "warehouseData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.WarehouseData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Codigo Warehouse incorreto, rever",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/warehouses/{id}": {
            "get": {
                "description": "This endpoint retrieves the information of a warehouse by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get warehouse by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    },
                    "400": {
                        "description": "Invalid warehouse ID",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint allows deleting a warehouse by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete a warehouse by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete warehouse",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "This endpoint allows updating the information of an existing warehouse identified by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update a warehouse by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated warehouse data",
                        "name": "warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.WarehouseData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated warehouse",
                        "schema": {
                            "$ref": "#/definitions/handler.WarehouseData"
                        }
                    },
                    "400": {
                        "description": "Invalid data provided",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update warehouse",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Warehouse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "handler.WarehouseData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "number"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "web.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}